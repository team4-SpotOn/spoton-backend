name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        container_name: spot-on-mysql
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: spoton-backend
          TZ: Asia/Seoul
        ports:
          - "3307:3306"
        volumes:
          - db-data:/var/lib/mysql
        networks:
          - app-network
        restart: always
        options: --health-cmd="mysqladmin ping --silent" --health-timeout=10s --health-start-period=30s --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Check commit message and PR title for "[#" trigger
        id: check_trigger
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MESSAGE"
          
          PR_TITLE=""
          if [[ -f "$GITHUB_EVENT_PATH" ]]; then
            PR_TITLE=$(jq --raw-output .pull_request.title $GITHUB_EVENT_PATH)
            echo "PR Title: $PR_TITLE"
          fi
          
          if [[ "$COMMIT_MESSAGE" == [#* || "$PR_TITLE" == [#* ]]; then
            echo "CI triggered because commit message or PR title starts with '[#'"
          else
            echo "Skipping CI because commit message and PR title do not start with '[#'"
            exit 0
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Give execute permission to gradlew
        run: chmod +x ./gradlew  # 실행 권한 부여

      - name: Build with Gradle
        run: ./gradlew build  # Gradle을 사용하여 빌드 실행

      - name: Wait for MySQL to be ready
        run: |
          docker exec spot-on-mysql mysqladmin --user=root --password=1234 --wait-for-server 30

      - name: Run tests with Gradle
        env:
          DB_HOST: mysql
          DB_PORT: 3306
          DB_NAME: spoton-backend
          DB_USER: root
          DB_PASSWORD: 1234
        run: ./gradlew test  # Gradle을 사용하여 테스트 실행

      - name: Generate Gradle dependency report
        run: ./gradlew dependencies --configuration compileClasspath > dependencies.txt

      - name: Upload dependency graph
        uses: actions/upload-artifact@v3
        with:
          name: gradle-dependency-report
          path: dependencies.txt
