name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Check commit message and PR title for "citest" trigger
      id: check_trigger
      run: |
        # 커밋 메시지 확인
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        echo "Commit message: $COMMIT_MESSAGE"

        # PR 제목 확인
        PR_TITLE=""
        if [[ -f "$GITHUB_EVENT_PATH" ]]; then
          PR_TITLE=$(jq --raw-output .pull_request.title $GITHUB_EVENT_PATH)
          echo "PR Title: $PR_TITLE"
        fi

        # 커밋 메시지나 PR 제목이 "[#"로 시작하는지 확인
        if [[ "$COMMIT_MESSAGE" == [#* || "$PR_TITLE" == [#* ]]; then
          echo "CI triggered because commit message or PR title starts with 'citest'"
        else
          echo "Skipping CI because commit message and PR title do not start with 'citest'"
          exit 0  # CI를 건너뛰기 위해 0으로 종료
        fi

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Give execute permission to gradlew
      run: chmod +x ./gradlew  # 실행 권한 부여

    - name: Build with Gradle
      run: ./gradlew build  # Gradle을 사용하여 빌드 실행

    - name: Generate Gradle dependency report
      run: ./gradlew dependencies --configuration compileClasspath > dependencies.txt

    # Optional: Upload the Gradle dependency report to GitHub
    - name: Upload dependency graph
      uses: actions/upload-artifact@v3
      with:
        name: gradle-dependency-report
        path: dependencies.txt


