name : Spring Boot Ec2 CI/CD Test

on:
  pull_request:
    branches:
      - "dev"
#    types:
#      - closed

jobs:
  on-merge:
#    if: github.event.pull_request.merged == true  # 병합된 경우에만 실행
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES}}" > ./application.properties
        shell: bash

      # Gradle 실행권한 부여
      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      # Spring boot application 빌드
      - name: Build with gradle
        run: ./gradlew clean build -x test

      # Docker Hub에 이미지 push 하기
      - name: Docker build
        env:
          SLACK_API_URL: ${{ secrets.SLACK_API_URL }}
        run: |
          docker login -u ${{ secrets.DOCKER_USER_NAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          sed -i "s|slack_api_url:.*|slack_api_url: \"$SLACK_API_URL\"|" alertmanager.yml
          cat alertmanager.yml
          docker build -t ${{ secrets.DOCKER_USER_NAME }}/spot-on . 
          docker push ${{ secrets.DOCKER_USER_NAME }}/spot-on

      # 기존 애플리케이션 이미지 삭제 후 최신 이미지 pull 과 docker-compose.yml 최신화를 위한 git pull orgin dev
      - name: SSH into EC2 and pull latest code
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # 디렉토리로 이동
            cd spoton-backend/
            # 최신 코드 pull
            git pull origin dev
            # Docker Compose 실행
            docker-compose down
            if [ "$(docker images -q ${{ secrets.DOCKER_USER_NAME}}/spot-on:latest)" ]; then
              docker rmi -f ${{ secrets.DOCKER_USER_NAME}}/spot-on:latest
            fi
            docker-compose up -d
