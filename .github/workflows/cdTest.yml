name : Spring Boot Ec2 CI/CD Test

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES}}" > ./application.properties
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew clean build --no-daemon
      ## 3) Docker Hub에 이미지 push 하기
      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_USER_NAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USER_NAME }}/spot-on . 
          docker push ${{ secrets.DOCKER_USER_NAME }}/spot-on
      ## 4) Docker Hub에 Push한 이미지를 리눅스 서버에 받아와서 run
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # Docker 로그인
            docker login -u ${{ secrets.DOCKER_USER_NAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            # 실행 중인 컨테이너를 안전하게 중지 및 삭제
            if [ "$(docker ps -q)" ]; then
              docker stop $(docker ps -q)
            fi
            if [ "$(docker ps -aq)" ]; then
              docker rm $(docker ps -aq)
            fi
            # 이전 이미지를 안전하게 삭제
            if [ "$(docker images -q spot-on-app:latest)" ]; then
              docker rmi -f spot-on-app:latest
            fi
            # 최신 이미지 Pull
            docker pull spot-on-app:latest
            # 필요한 구성 파일 추가 (필요 시 EC2 서버의 위치에 맞게 조정)
            
            # Docker Compose 실행 (컨테이너 이름, 볼륨 설정, 환경 변수 확인)
            cd ~/app
            docker-compose down  # 기존 설정이 있으면 중지
            docker-compose up -d
