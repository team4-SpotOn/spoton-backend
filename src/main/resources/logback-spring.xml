<?xml version="1.0" encoding="UTF-8"?>
<!-- 60초마다 설정 파일의 변경을 확인 하여 변경시 갱신 -->
<configuration debug="true" scan="true" scanPeriod="60 seconds">
<!--    &lt;!&ndash; 로그 패턴에 색상 적용 &ndash;&gt;-->
<!--    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>-->
<!--    &lt;!&ndash;-->
<!--        springProfile 태그를 사용하면 logback 설정 파일에서 복수개의 프로파일(properties)을 설정할 수 있다.-->
<!--        dev 개발환경-->
<!--        prod 운영환경-->
<!--    &ndash;&gt;-->

<!--    <springProperty scope="context" name="LOG_LEVEL" source="logging.level.root"/>-->
<!--    <springProperty scope="context" name="LOG_PATH" source="logging.file.path"/>-->
<!--    <springProperty scope="context" name="LOG_PATTERN" source="logging.pattern.console"/>-->

<!--    <property name="INFO_LOG_FILE_NAME" value="info"/>-->
<!--    <property name="ERR_LOG_FILE_NAME" value="err"/>-->
<!--    <property name="WARN_LOG_FILE_NAME" value="warn"/>-->

<!--    &lt;!&ndash; Console Appender &ndash;&gt;-->
<!--    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    &lt;!&ndash; File Appender &ndash;&gt;-->
<!--    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 파일명 설정 &ndash;&gt;-->
<!--        <file>${LOG_PATH}/${INFO_LOG_FILE_NAME}.log</file>-->
<!--        &lt;!&ndash; 출력패턴 설정&ndash;&gt;-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--        </encoder>-->
<!--        &lt;!&ndash; 파일 크기 및 시간기반으로 Rolling 할 수 있도록 정책 설정&ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; .gz,.zip 등을 넣으면 자동 일자별 로그 파일 압축 &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_PATH}/${INFO_LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>-->
<!--            &lt;!&ndash; 파일당 최고 용량: 설정 크기 초과 시 새로운 파일 생성 &ndash;&gt;-->
<!--            <maxFileSize>10MB</maxFileSize>-->
<!--            &lt;!&ndash; 일자별 로그 파일 최대 보관일(단위: 일), 설정 일 초과 시 파일 자동 제거&ndash;&gt;-->
<!--            <maxHistory>10</maxHistory>-->
<!--            &lt;!&ndash; 전체 용량 제어&ndash;&gt;-->
<!--            <totalSizeCap>1GB</totalSizeCap>-->
<!--        </rollingPolicy>-->
<!--    </appender>-->

<!--    &lt;!&ndash; WARN 레벨 로그를 별도 파일에 로그 처리 &ndash;&gt;-->
<!--    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>warn</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--        <file>${LOG_PATH}/${WARN_LOG_FILE_NAME}.log</file>-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--        </encoder>-->
<!--        &lt;!&ndash; Rolling 정책 &ndash;&gt;-->
<!--        &lt;!&ndash; 파일 크기 및 시간기반으로 Rolling 할 수 있도록 정책 설정&ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_PATH}/${WARN_LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>-->
<!--            &lt;!&ndash; 파일당 최고 용량 kb, mb, gb &ndash;&gt;-->
<!--            <maxFileSize>10MB</maxFileSize>-->
<!--            &lt;!&ndash; 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거&ndash;&gt;-->
<!--            <maxHistory>10</maxHistory>-->
<!--            &lt;!&ndash; 전체 용량 제어&ndash;&gt;-->
<!--            <totalSizeCap>1GB</totalSizeCap>-->
<!--        </rollingPolicy>-->
<!--    </appender>-->

<!--    &lt;!&ndash; ERROR 레벨 로그를 별도 파일에 로그 처리 &ndash;&gt;-->
<!--    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>error</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--        <file>${LOG_PATH}/${ERR_LOG_FILE_NAME}.log</file>-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--        </encoder>-->
<!--        &lt;!&ndash; Rolling 정책 &ndash;&gt;-->
<!--        &lt;!&ndash; 파일 크기 및 시간기반으로 Rolling 할 수 있도록 정책 설정&ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_PATH}/${ERR_LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>-->
<!--            &lt;!&ndash; 파일당 최고 용량 kb, mb, gb &ndash;&gt;-->
<!--            <maxFileSize>10MB</maxFileSize>-->
<!--            &lt;!&ndash; 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거&ndash;&gt;-->
<!--            <maxHistory>10</maxHistory>-->
<!--            &lt;!&ndash; 전체 용량 제어&ndash;&gt;-->
<!--            <totalSizeCap>1GB</totalSizeCap>-->
<!--        </rollingPolicy>-->
<!--    </appender>-->

<!--    &lt;!&ndash; root 레벨 설정 &ndash;&gt;-->
<!--    &lt;!&ndash; 설정한 level 로그를 appender-ref(참조할 appender)로 출력/파일 저장  &ndash;&gt;-->
<!--    <root level="${LOG_LEVEL}">-->
<!--        <appender-ref ref="CONSOLE"/>-->
<!--        <appender-ref ref="FILE"/>-->
<!--        <appender-ref ref="WARN"/>-->
<!--        <appender-ref ref="ERROR"/>-->
<!--    </root>-->
</configuration>